# https://faun.pub/unique-configuration-per-pod-in-a-statefulset-1415e0c80258
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-set-config
data:
  run.sh: |
    #!/bin/sh
    SET_INDEX=${HOSTNAME##*-}
    echo "Starting initializing for pod $SET_INDEX"
    if [ "$SET_INDEX" = "0" ]; then
      cp /mnt/scripts/set-0.conf /mnt/data/set.conf
    elif [ "$SET_INDEX" = "1" ]; then
      cp /mnt/scripts/set-1.conf /mnt/data/set.conf
    elif [ "$SET_INDEX" = "2" ]; then
      cp /mnt/scripts/set-2.conf /mnt/data/set.conf
    else
      echo "Invalid statefulset index"
      exit 1
    fi
  set-0.conf: |
    hello
  set-1.conf: |
    stateful
  set-2.conf: |
    set
---
apiVersion: v1
kind: Service
metadata:
  name: my-set-svc
  labels:
    name: my-set-svc
spec:
  clusterIP: None
  ports:
    - name: http
      port: 80
  selector:
    name: my-set
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-set
  labels:
    name: my-set
spec:
  serviceName: my-set-svc
  replicas: 3
  selector:
    matchLabels:
      name: my-set
  template:
    metadata:
      labels:
        name: my-set
    spec:
      containers:
        - name: my-set
          image: alpine:latest
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -c
          args:
            - echo "Starting statefulset pod"; cat /etc/app/conf/set.conf; while true; do sleep 600; done
          volumeMounts:
            - name: conf-vol
              mountPath: /etc/app/conf
      initContainers:
        - name: init-set
          image: alpine:latest
          command:
            - /mnt/scripts/run.sh
          volumeMounts:
            - name: scripts-vol
              mountPath: /mnt/scripts
            - name: conf-vol
              mountPath: /mnt/data
      volumes:
        - name: scripts-vol
          configMap:
            name: my-set-config
            defaultMode: 0555
        - name: conf-vol
          emptyDir: {}
