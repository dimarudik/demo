events {
    worker_connections  1024;
}

http {
    upstream db01 {
         server 172.22.0.13:8080;
         server 172.22.0.12:8080;
    }
    upstream db02 {
         server 172.22.0.17:8080;
         server 172.22.0.16:8080;
    }
    upstream db03 {
         server 172.22.0.15:8080;
         server 172.22.0.14:8080;
    }
    upstream db04 {
         server 172.22.0.19:8080;
         server 172.22.0.18:8080;
    }

    map $proxy $pool {
         1 "db01";
         2 "db02";
         3 "db03";
         0 "db04";
    }

    server {
        listen  80;
        location / {
            set $proxy "";
            rewrite_by_lua_block {
                local clientid = ngx.req.get_headers()["clientid"]

                function siebelRowIdToBase10(id)
                    clientBase10 = {}
                    for word in string.gmatch(id, '([^-]+)') do
                        table.insert(clientBase10, string.format("%.0f", tonumber(word, 36)));
                    end
                    return tonumber(table.concat(clientBase10))
                end

--[[
                ngx.var.proxy = siebelRowIdToBase10(clientid) % 2;

                if siebelRowIdToBase10(clientid) % 2 == 1 then
                    ngx.var.proxy = siebelRowIdToBase10(clientid) % 4;
                else
                    ngx.var.proxy = siebelRowIdToBase10(clientid) % 2;
                end
--]]
                ngx.var.proxy = siebelRowIdToBase10(clientid) % 4;
--                ngx.say(siebelRowIdToBase10(clientid))
--                ngx.say(ngx.var.proxy)
            }

            proxy_read_timeout 800ms;
            proxy_pass http://$pool;
        }
    }
}
